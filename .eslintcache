[{"C:\\Users\\Milton\\Desktop\\trato\\src\\index.js":"1","C:\\Users\\Milton\\Desktop\\trato\\src\\App.js":"2","C:\\Users\\Milton\\Desktop\\trato\\src\\reportWebVitals.js":"3","C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Body\\index.js":"4","C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Home\\index.js":"5","C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Transfer\\index.js":"6","C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Navigation\\index.js":"7","C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\LoginPage\\index.js":"8","C:\\Users\\Milton\\Desktop\\trato\\src\\userContext.js":"9","C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Footer\\index.js":"10","C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Home\\MainExpenses\\index.js":"11","C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Home\\TransactionHistory\\index.js":"12","C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Home\\CurrentBalance\\index.js":"13"},{"size":640,"mtime":1611632090329,"results":"14","hashOfConfig":"15"},{"size":1032,"mtime":1611627084482,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":218,"mtime":1611294129127,"results":"18","hashOfConfig":"15"},{"size":1035,"mtime":1611629782057,"results":"19","hashOfConfig":"15"},{"size":5030,"mtime":1611629900190,"results":"20","hashOfConfig":"15"},{"size":1360,"mtime":1611629292553,"results":"21","hashOfConfig":"15"},{"size":4738,"mtime":1611633357642,"results":"22","hashOfConfig":"15"},{"size":91,"mtime":1611621246559,"results":"23","hashOfConfig":"15"},{"size":246,"mtime":1611633203082,"results":"24","hashOfConfig":"15"},{"size":1140,"mtime":1611633598651,"results":"25","hashOfConfig":"15"},{"size":3466,"mtime":1611633653097,"results":"26","hashOfConfig":"15"},{"size":3599,"mtime":1611633593249,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"zd72qh",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Milton\\Desktop\\trato\\src\\index.js",[],["57","58"],"C:\\Users\\Milton\\Desktop\\trato\\src\\App.js",[],"C:\\Users\\Milton\\Desktop\\trato\\src\\reportWebVitals.js",[],"C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Body\\index.js",[],["59","60"],"C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Home\\index.js",[],"C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Transfer\\index.js",["61"],"import React, {useState} from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { Card, CardBody, CardTitle } from \"reactstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Table, FormGroup, Button } from \"reactstrap\";\r\n\r\nconst Input = ({ label, register, id}) => (\r\n  <>\r\n    <label htmlFor={label}>{label}</label>\r\n    <input className=\"form-control\" name={id} required ref={register({\r\n                      maxLength: {\r\n                        value: 9\r\n                      }\r\n    })} />\r\n  </>\r\n);\r\n\r\nconst Select = React.forwardRef(({ label, id }, ref) => (\r\n  <>\r\n    <label htmlFor={id}>{label}</label>\r\n    <select className=\"form-control\" name={id} ref={ref}>\r\n      <option value=\"123456789\">123456789</option>\r\n      <option value=\"987654321\">987654321</option>\r\n    </select>\r\n  </>\r\n));\r\n\r\nconst Transfer = () => {\r\n  const transactionHistory = [\r\n    {\r\n      fromAccount: 123456789,\r\n      toAccount: 192837465,\r\n      amount: {\r\n        currency: \"€\",\r\n        value: 876.88\r\n      },\r\n      sentAt: \"2012-04-23T18:25:43.511Z\"\r\n    },\r\n    {\r\n      fromAccount: 123456789,\r\n      toAccount: 192837465,\r\n      amount: {\r\n        currency: \"€\",\r\n        value: 654.88\r\n      },\r\n      sentAt: \"2012-04-21T18:2  :43.511Z\"\r\n    },\r\n    {\r\n      fromAccount: 987654321,\r\n      toAccount: 543216789,\r\n      amount: {\r\n        currency: \"$\",\r\n        value: 543\r\n      },\r\n      sentAt: \"2012-04-23T18:25:43.511Z\"\r\n    },\r\n    {\r\n      fromAccount: 987654321,\r\n      toAccount: 543216789,\r\n      amount: {\r\n        currency: \"$\",\r\n        value: 987.54\r\n      },\r\n      sentAt: \"2012-04-23T18:25:43.511Z\"\r\n    }\r\n  ];\r\n\r\n  const { register, handleSubmit} = useForm();\r\n\r\n  const onSubmit = (payload, e) =>  {\r\n    alert(JSON.stringify(payload));\r\n    e.target.reset();\r\n    result[payload.fromAccount].push({fromAccount: payload.fromAccount, toAccount: payload.toAccount, sentAt: new Date().toISOString(), amount: payload.amount, currency: \"€\"});\r\n  };\r\n\r\n\r\n  const requiredDataFromResponse = transactionHistory;\r\n  const data = requiredDataFromResponse.map(eachSensorItem => ({\r\n    fromAccount: eachSensorItem.fromAccount,\r\n    toAccount: eachSensorItem.toAccount,\r\n    sentAt: eachSensorItem.sentAt,\r\n    amount: eachSensorItem.amount.value,\r\n    currency: eachSensorItem.amount.currency\r\n  }));\r\n\r\n  const [result, setResult] = useState(() => {\r\n    let result = data.reduce(function (r, a) {\r\n      r[a.fromAccount] = r[a.fromAccount] || [];\r\n      r[a.fromAccount].push(a);\r\n      return r;\r\n    }, Object.create(null));\r\n    return result;\r\n  });\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"m-0\">\r\n        <Col sm=\"12\" md=\"4\">\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle className=\"text-center\" tag=\"h2\">\r\n                Create new transfer\r\n              </CardTitle>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <FormGroup className=\"formGroup\">\r\n                  <Select label=\"Select origin account\" id=\"fromAccount\" ref={register} />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Input\r\n                    label=\"Destination account\"\r\n                    name=\"destination\"\r\n                    id=\"toAccount\"\r\n                    register={register}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Input label=\"Amount\" id=\"amount\" register={register} required />\r\n                </FormGroup>\r\n\r\n                <Button className=\"float-right\" style={{marginLeft:\"5px\"}} outline color=\"secondary\" type=\"reset\">Cancel</Button>\r\n                <Button className=\"float-right\" color=\"primary\">Transfer</Button>{' '}\r\n              </form>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n        <Col sm=\"12\" md=\"8\"></Col>\r\n        <Col sm=\"12\" md=\"12\">\r\n          {Object.entries(result).map(([key, value]) => {\r\n            return (\r\n              <div key={key}>\r\n                <Table bordered size=\"sm\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Origin account</th>\r\n                      <th>Destination account</th>\r\n                      <th>Transfer date</th>\r\n                      <th>Amount</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {value.map((val, index) => {\r\n                      return (\r\n                        <tr key={index}>\r\n                          <td>{value[index].fromAccount}</td>\r\n                          <td>{value[index].toAccount}</td>\r\n                          <td>{value[index].sentAt}</td>\r\n                          <td>{value[index].currency+\"\"+value[index].amount}</td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            );\r\n          })}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transfer;\r\n","C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Navigation\\index.js",[],"C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\LoginPage\\index.js",[],"C:\\Users\\Milton\\Desktop\\trato\\src\\userContext.js",[],"C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Footer\\index.js",[],"C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Home\\MainExpenses\\index.js",[],"C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Home\\TransactionHistory\\index.js",[],"C:\\Users\\Milton\\Desktop\\trato\\src\\Components\\Home\\CurrentBalance\\index.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"62","replacedBy":"66"},{"ruleId":"64","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":86,"column":18,"nodeType":"70","messageId":"71","endLine":86,"endColumn":27},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],"no-unused-vars","'setResult' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]